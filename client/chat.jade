template(name='chats')
    .ui.stackable.padded.grid
        .four.wide.column
            .ui.center.aligned.header
                i.chat.outline.icon
                | Chat
            .ui.circular.fluid.button.add_chat
                i.plus.icon
                |Add Chat
            .ui.small.header
                i.grey.tags.icon
                |Filter Tags
            .ui.icon.small.fluid.input
                i.search.icon
                input#search(type='text' autocomplete='off' placeholder='Search Tags')
            if selected_tags
                #clear_tags.ui.grey.icon.circular.button
                    i.remove.icon
            each selected_tags
                .unselect_tag.ui.grey.circular.button
                    b #{this}
            each global_tags
                .select_tag.ui.circular.button
                    |#{this.name}
                    small #{this.count}
        .twelve.wide.column
            each chats
                +chat_item


template(name='chat_item')
    .ui.segment
        a.ui.header(href="/chat/#{_id}/view")
            |#{title}
        .description
            .ui.small.header #{body}
            +tags_view_small
        .extra
            +user_list_toggle key='bookmark_ids' add_icon='bookmark' remove_icon='bookmark' add_label='Bookmark' remove_label='Unbookmark' color='red' big=false
            +view_button_big
            +edit_button_small


template(name='chat_edit')
    with doc
        .ui.stackable.padded.grid
            .four.wide.column
                .ui.header
                    i.pencil.icon
                    |Edit Chat
                a.ui.fluid.circular.button(href="/chat/#{_id}/view")
                    i.checkmark.icon
                    |Save
                .ui.circular.button.delete_chat
                    i.remove.icon
                    |Delete
            .twelve.wide.column
                .ui.segment
                    .ui.form
                        .field
                            label Title
                            input.title(type='text' value=title)
                        .field
                            label Description
                            textarea.body(rows='5') #{body}
                        +array_edit key='tags'
                        .field
                            label Participants:
                            input.assignee(type='text' value=asignee)
                            each participants
                                +user_list_item

template(name='chat_view')
    with doc
        .ui.stackable.padded.grid
            .six.wide.column
                .ui.header
                    a(href="/chats" title='chats')
                        i.chat.link.circular.icon
                    |View Chat
                .ui.segment
                    .ui.header
                        |#{title}
                    h4 #{body}
                    +tags_view_big
                    +user_list_toggle key='bookmark_ids' add_icon='bookmark' remove_icon='bookmark' add_label='Bookmark' remove_label='Unbookmark' color='red' big=true
                    +edit_button_big
                .ui.segment
                    .ui.small.header
                        i.users.grey.icon
                        |Participants
                    +user_list_toggle key='participant_ids' add_icon='user add' remove_icon='user times' add_label='Join' remove_label='Leave' color='teal' big=true
                +follow
            .ten.wide.column
                .ui.fluid.segment
                    .ui.comments
                        each messages
                            .comment
                                .content
                                    a.author #{author.profile.name}
                                    .metadata
                                        span.date #{when}
                                    .text.f6 #{body}
                                    .actions
                                        if currentUser
                                            if is_author
                                                i.remove.link.remove_message.icon
                                            else
                                                i.thumbs.up.link.icon
                                            if read
                                                i.envelope.open.icon
                                            else
                                                i.envelope.icon
                    if in_list 'participant_ids'
                        .ui.fluid.icon.input
                            i.plus.icon
                            input.add_message(type='text' placeholder='Add message...')
